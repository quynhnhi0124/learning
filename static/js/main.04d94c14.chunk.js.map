{"version":3,"sources":["Content.js","index.js"],"names":["Content","props","updateItem","onUpdateJob","cancelUpdate","React","name","updateJobName","setUpdateJobName","className","value","onChange","e","target","onClick","LIST_JOB","id","App","jobs","setJobs","addJob","setAddJob","isShowUpdate","setIsShowUpdate","newJobList","map","job","String","length","jobId","filter","handleDeleteJob","ReactDOM","render","document","getElementById"],"mappings":"wKA2BeA,MAzBf,SAAiBC,GAEb,IAAOC,EAAyCD,EAAzCC,WAAYC,EAA6BF,EAA7BE,YAAaC,EAAgBH,EAAhBG,aAChC,EAA0CC,WAAeH,EAAWI,MAApE,mBAAOC,EAAP,KAAsBC,EAAtB,KASA,OACI,gCACI,uBACIC,UAAU,eACVC,MAAOH,EACPI,SAAU,SAAAC,GAAC,OAAIJ,EAAiBI,EAAEC,OAAOH,UAE7C,wBAAQD,UAAU,uBAAuBK,QAfzB,WACpBZ,EAAWI,KAAOC,EAClBJ,EAAYD,IAaR,gBACA,wBAAQO,UAAU,uBAAuBK,QAZtB,WACvBV,KAWI,wBClBNW,EAAW,CACb,CACIC,GAAI,IACJV,KAAM,WAEV,CACIU,GAAI,IACJV,KAAM,WAKd,SAASW,IAEL,MAAwBZ,WAAeU,GAAvC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4Bd,WAAe,IAA3C,mBAAOe,EAAP,KAAeC,EAAf,KACA,EAAwChB,aAAxC,mBAAOiB,EAAP,KAAqBC,EAArB,KAUMpB,EAAc,SAACD,GACjB,IAAMsB,EAAaN,EACnBM,EAAWC,KAAI,SAAAC,GAAG,OAAIA,EAAIV,KAAOd,EAAWc,GAAKd,EAAawB,KAC9DP,EAAQK,GACRD,KAGEnB,EAAe,WACjBmB,KAUJ,OACI,sBAAKd,UAAU,YAAf,UACI,sBAAKA,UAAU,WAAf,UACI,uBACIA,UAAU,iCACVC,MAAOU,EACPT,SAAU,SAAAC,GAAC,OAAIS,EAAUT,EAAEC,OAAOH,UAEtC,wBAAQD,UAAU,uBAAuBK,QAlChC,WACjBK,EAAQ,GAAD,mBAAKD,GAAL,CAAW,CAACF,GAAIW,OAAOT,EAAKU,OAAS,GAAItB,KAAMc,OAiC9C,oBAEJ,gEACA,6BACCF,EAAKO,KAAI,SAAAC,GAAG,OACT,sBAEIjB,UAAU,WAFd,UAII,6BACKiB,EAAIpB,OAERgB,IAAiBI,EAAIV,IAAM,cAAC,EAAD,CAASd,WAAYwB,EAAKvB,YAAaA,EAAaC,aAAcA,IAC9F,wBAAQK,UAAU,uBAAuBK,QAAS,kBA3CxCe,EA2C+DH,EAAIV,QA1CzFO,EAAgBM,GADK,IAACA,GA2CV,oBACA,wBAAQpB,UAAU,uBAAuBK,QAAS,kBA7B1C,SAACe,GACrB,IAAML,EAAaN,EAAKY,QAAO,SAAAJ,GAC3B,OAAOA,EAAIV,KAAOa,KAEtBV,EAAQK,GAyB4DO,CAAgBL,EAAIV,KAA5E,sBARKU,EAAIV,YAiB7BgB,IAASC,OAAO,cAAChB,EAAD,IAASiB,SAASC,eAAe,W","file":"static/js/main.04d94c14.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nfunction Content(props)\r\n{\r\n    const {updateItem, onUpdateJob, cancelUpdate} = props;\r\n    const [updateJobName, setUpdateJobName] = React.useState(updateItem.name);\r\n    const handleUpdateJob = () => {\r\n        updateItem.name = updateJobName;\r\n        onUpdateJob(updateItem);\r\n    }\r\n    const handleCancelUpdate = () => {\r\n        cancelUpdate();\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <input\r\n                className='form-control'\r\n                value={updateJobName}\r\n                onChange={e => setUpdateJobName(e.target.value)}\r\n            />\r\n            <button className='btn btn-outline-dark' onClick={handleUpdateJob}>OK</button>\r\n            <button className='btn btn-outline-dark' onClick={handleCancelUpdate}>Cancel</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Content;","import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport Content from \"./Content\"\r\n\r\nconst LIST_JOB = [\r\n    {\r\n        id: '1',\r\n        name: 'Di choi'\r\n    },\r\n    {\r\n        id: '2',\r\n        name: 'Di ngu'\r\n    }\r\n];\r\n\r\n\r\nfunction App()\r\n{\r\n    const [jobs, setJobs] = React.useState(LIST_JOB);\r\n    const [addJob, setAddJob] = React.useState('');\r\n    const [isShowUpdate, setIsShowUpdate] = React.useState();\r\n\r\n    const handleAddJob = () => {\r\n        setJobs([...jobs, {id: String(jobs.length + 1), name: addJob}])\r\n    }\r\n    \r\n    const handleShowUpdate = (jobId) => {\r\n        setIsShowUpdate(jobId);\r\n    }\r\n\r\n    const onUpdateJob = (updateItem) => {\r\n        const newJobList = jobs;\r\n        newJobList.map(job => job.id === updateItem.id ? updateItem : job);\r\n        setJobs(newJobList);\r\n        setIsShowUpdate();\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setIsShowUpdate();\r\n    }\r\n\r\n    const handleDeleteJob = (jobId) => {\r\n        const newJobList = jobs.filter(job => {\r\n            return job.id !== jobId\r\n        });\r\n        setJobs(newJobList);\r\n    }\r\n    \r\n    return (\r\n        <div className='container'>\r\n            <div className=\"row my-3\">\r\n                <input\r\n                    className='form-control col-md-8 col-sm-8'\r\n                    value={addJob}\r\n                    onChange={e => setAddJob(e.target.value)}\r\n                />\r\n                <button className='btn btn-outline-dark' onClick={handleAddJob}>Add</button>\r\n            </div>\r\n            <h3>Danh sách công việc</h3>\r\n            <ul>\r\n            {jobs.map(job => (\r\n                <div \r\n                    key={job.id}\r\n                    className=\"row mt-3\"    \r\n                >\r\n                    <li>\r\n                        {job.name}\r\n                    </li>\r\n                    {isShowUpdate === job.id && <Content updateItem={job} onUpdateJob={onUpdateJob} cancelUpdate={cancelUpdate}/>}\r\n                    <button className='btn btn-outline-dark' onClick={() => handleShowUpdate(job.id)}>Update</button>\r\n                    <button className='btn btn-outline-dark' onClick={() => handleDeleteJob(job.id)}>Delete</button>\r\n                </div>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}