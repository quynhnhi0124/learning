{"version":3,"sources":["Update.js","Add.js","Search.js","models/todoList.js","index.js"],"names":["Update","props","updateItem","onUpdateJob","cancelUpdate","listProcess","React","title","updateJobName","setUpdateJobName","completed","updateProcess","setUpdateProcess","className","value","onChange","e","target","console","log","Object","keys","map","key","type","checked","String","onClick","Add","addJob","onAddJob","onAddProcess","handleAddJob","listErrors","job","defaultValue","indexOf","Search","searchJob","inputSearch","setInputSearch","placeholder","a","fetch","posts","json","Error","getToDoList","LIST_STATUS","App","errors","setErrors","jobs","setJobs","setAddJob","filterData","setFilterData","counter","setCounter","addProcess","setAddProcess","isShowUpdate","setIsShowUpdate","length","then","datas","validation","match","hasOwnProperty","delValidate","newJobList","id","newListJob","input","result","filter","toLowerCase","includes","jobId","handleDeleteJob","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22b0911b.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nfunction Update(props)\r\n{\r\n    const {updateItem, onUpdateJob, cancelUpdate, listProcess} = props;\r\n    const [updateJobName, setUpdateJobName] = React.useState(updateItem.title);\r\n    const [updateProcess, setUpdateProcess] = React.useState(updateItem.completed ? 1 : 0);\r\n\r\n    const handleUpdateJob = () => {\r\n        updateItem.title = updateJobName;\r\n        updateItem.completed = updateProcess;\r\n        onUpdateJob(updateItem);\r\n    }\r\n    const handleCancelUpdate = () => {\r\n        cancelUpdate();\r\n    }\r\n    \r\n    return (\r\n        <div className='my-2'>\r\n            <div className='d-block'>\r\n                <p>Chỉnh sửa:</p>\r\n                <input\r\n                    className='form-control col-md-3 col-sm-3 mb-2'\r\n                    value={updateJobName}\r\n                    onChange={e => setUpdateJobName(e.target.value)}\r\n                />\r\n                <div className='d-block'>\r\n                    {console.log('update render')}\r\n                    {Object.keys(listProcess).map((key) => {\r\n                        return (<div key={key}>\r\n                                    <input\r\n                                        type='radio'\r\n                                        value={key} \r\n                                        checked={String(updateProcess) === key ? 'checked' : ''}\r\n                                        onChange={(e) => setUpdateProcess(e.target.value)}/> {listProcess[key]}\r\n                                </div>)\r\n                    })}\r\n                </div>\r\n                <button className='btn btn-outline-dark' onClick={handleUpdateJob}>OK</button>\r\n                <button className='btn btn-outline-dark' onClick={handleCancelUpdate}>Cancel</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Update;","import * as React from \"react\";\r\n\r\nfunction Add(props)\r\n{\r\n    const {addJob, listProcess, onAddJob, onAddProcess, handleAddJob, listErrors} = props;\r\n\r\n    return (\r\n        <div className=\"my-3 mx-3\">\r\n            <div className=\"row d-block\">\r\n                <p>Công việc:</p> \r\n                <input\r\n                    className='form-control col-md-6 col-sm-6'\r\n                    value={addJob}\r\n                    onChange={e => onAddJob(e)}\r\n                />\r\n                <p className=\"text-danger\">{listErrors.job ? listErrors.job: null}</p>\r\n            </div>\r\n            <div className=\"row d-block\">\r\n                <p>Trạng thái:</p>\r\n                <select \r\n                    className=\"custom-select col-md-6 col-sm-6\" \r\n                    defaultValue=\"Chua lam\" \r\n                    onChange={ e => onAddProcess(listProcess.indexOf(e))}>\r\n                    {Object.keys(listProcess).map((key) => (\r\n                        <option key={key}>\r\n                            {listProcess[key]}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n            <button className='my-1 btn btn-outline-dark' onClick={handleAddJob}>Add</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Add;","import * as React from 'react';\r\n\r\nfunction Search(props)\r\n{\r\n    const {searchJob} = props;\r\n    const [inputSearch, setInputSearch] = React.useState('');\r\n\r\n    const handleSearch = () => {\r\n        searchJob(inputSearch)\r\n    }\r\n\r\n    return (\r\n        <div className='row my-3 mx-0'>\r\n            <div className='col-md-6 p-0'>\r\n                <input \r\n                    className='form-control'\r\n                    onChange={e => setInputSearch(e.target.value)}\r\n                    placeholder='Tìm kiếm....'/>\r\n            </div>\r\n            <div className='col-md-5 p-0'>\r\n                <button className='btn btn-outline-primary' onClick={handleSearch}>Tìm kiếm</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","\r\nasync function getToDoList()\r\n{\r\n    try {\r\n        const posts = await fetch('https://jsonplaceholder.typicode.com/todos')\r\n        return posts.json();\r\n    } catch {\r\n        const error = new Error('error');\r\n        throw error;\r\n    }\r\n}\r\n\r\nexport default getToDoList;","import * as React from \"react\";\r\nimport ReactDOM from \"react-dom\"\r\nimport Update from \"./Update\"\r\nimport Add from \"./Add\";\r\nimport Search from \"./Search\";\r\nimport getToDoList from \"./models/todoList\";\r\n\r\nconst LIST_STATUS = {1 : \"Hoàn thành\", 0: \"Chưa hoàn thành\"};\r\n\r\n\r\nfunction App()\r\n{\r\n    const [errors, setErrors] = React.useState({});\r\n    const [jobs, setJobs] = React.useState([]);\r\n    const [addJob, setAddJob] = React.useState('');\r\n    const [filterData, setFilterData] = React.useState([]);\r\n    const [counter, setCounter] = React.useState(0);\r\n    const [addProcess, setAddProcess] = React.useState();\r\n    const [isShowUpdate, setIsShowUpdate] = React.useState();\r\n\r\n    React.useEffect(() => setCounter(filterData.length), [filterData])\r\n    React.useEffect(() => {\r\n        getToDoList().then(datas => {\r\n            setJobs(datas);\r\n            setFilterData(datas);\r\n            return datas;\r\n        })\r\n    }, [])\r\n    \r\n    const onAddJob = e => {\r\n        setAddJob(e.target.value)\r\n    }\r\n    \r\n    const HandleAddJob = () => {\r\n        validation();\r\n        if (validation() === true) {\r\n            const newListJob = [...jobs,\r\n                {id: jobs[jobs.length - 1].id + 1, title: addJob, completed: addProcess}];\r\n            setJobs(newListJob);\r\n            setFilterData(newListJob);\r\n            setAddJob('');\r\n        }\r\n    }\r\n\r\n    const validation = () => {\r\n        if (addJob === null || addJob.match(/^ *$/) !== null) {\r\n            if(!errors.hasOwnProperty('job')) {\r\n                errors.job = 'Trường nhập bắt buộc';\r\n                setErrors({...errors})\r\n            }\r\n            return false;\r\n        } else {\r\n            const delValidate  = errors;\r\n            delete delValidate.job; \r\n            setErrors(delValidate);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    const onAddProcess = e => {\r\n        setAddProcess(e.target.value)\r\n    }\r\n    \r\n    const handleShowUpdate = (jobId) => {\r\n        setIsShowUpdate(jobId);\r\n    }\r\n\r\n    const onUpdateJob = (updateItem) => {\r\n        const newJobList = jobs;\r\n        newJobList.map(job => job.id === updateItem.id ? updateItem : job);\r\n        setJobs(newJobList);\r\n        setIsShowUpdate();\r\n    }\r\n\r\n    const cancelUpdate = () => {\r\n        setIsShowUpdate();\r\n    }\r\n\r\n    const handleDeleteJob = (jobId) => {\r\n        const newJobList = jobs.filter(job => {\r\n            return job.id !== jobId;\r\n        });\r\n        setJobs(newJobList);\r\n        setFilterData(newJobList);\r\n    }\r\n\r\n    const handleSearchJob = (input) => {\r\n        if (input === '') {\r\n            setFilterData(jobs);\r\n        } else {\r\n            const result = jobs.filter((job) => job.title.toLowerCase().includes(input));\r\n            setFilterData(result);\r\n        }\r\n        return filterData;\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <Add \r\n                addJob={addJob}\r\n                listProcess={LIST_STATUS} \r\n                handleAddJob={HandleAddJob} \r\n                onAddJob={onAddJob}\r\n                onAddProcess={onAddProcess}\r\n                listErrors={errors}\r\n            />\r\n            <Search\r\n                searchJob={handleSearchJob}\r\n\r\n            />\r\n            <h3>Danh sách công việc</h3>\r\n            <h5>Hiện trong danh sách có: {counter} công việc</h5>\r\n            <ul>\r\n            {filterData.map(job => (\r\n                <div key={job.id}>\r\n                    <div \r\n                        className=\"mt-3\"    \r\n                    >\r\n                        <li className=\"d-block\">\r\n                            <p>{job.title}</p>\r\n                            <p>Trạng thái: {job.completed ? 'Hoàn thành' : 'Chưa hoàn thành'}</p>\r\n                        </li>\r\n                        {\r\n                            isShowUpdate === job.id &&\r\n                            <Update \r\n                                updateItem={job} \r\n                                onUpdateJob={onUpdateJob} \r\n                                cancelUpdate={cancelUpdate}\r\n                                listProcess={LIST_STATUS} \r\n                            /> \r\n                        }\r\n                        <button className='btn btn-outline-success' onClick={() => handleShowUpdate(job.id)}>Update</button>\r\n                        <button className='btn btn-outline-danger' onClick={() => handleDeleteJob(job.id)}>Delete</button>\r\n                    </div><hr/>\r\n                </div>\r\n            ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}